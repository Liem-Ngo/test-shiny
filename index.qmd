---
title: Shinylive in Quarto example
format: html
filters:
  - shinylive
---
### Editor with app

If you want to display an editor panel with along with the running application, use `#| components: [editor, viewer]`. Users will be able to use the editor to modify the code and re-run the application.

```{shinylive-python}
#| standalone: true
#| viewerHeight: 400

from shiny import App, ui, render
import pandas as pd
from pyodide.http import open_url
from shiny import App, Inputs, Outputs, Session, reactive, render, ui

# Define the directory and file path
file_path = open_url("https://raw.githubusercontent.com/Liem-Ngo/test-shiny/main/triz_39.csv")

# Define parameter mapping
parameter_mapping = {
    "1. Trọng lượng đối tượng chuyển động": 1,
    "2. Trọng lượng đối tượng bất động": 2,
    "3. Độ dài đối tượng chuyển động": 3,
    "4. Độ dài đối tượng bất động": 4,
    "5. Diện tích đối tượng chuyển động": 5,
    "6. Diện tích đối tượng bất động": 6,
    "7. Thể tích đối tượng chuyển động": 7,
    "8. Thể tích đối tượng bất động": 8,
    "9. Vận tốc": 9,
    "10. Lực": 10,
    "11. Ứng suất, áp suất": 11,
    "12. Hình dạng": 12,
    "13. Tính ổn định của thành phần đối tượng": 13,
    "14. Độ bền": 14,
    "15. Thời hạn hoạt động của đối tượng chuyển động": 15,
    "16. Thời hạn hoạt động của đối tượng bất động": 16,
    "17. Nhiệt độ": 17,
    "18. Độ chiếu sáng (độ rọi)": 18,
    "19. Năng lượng tiêu hao bởi đối tượng chuyển động": 19,
    "20. Năng lượng tiêu hao bởi đối tượng bất động": 20,
    "21. Công suất": 21,
    "22. Năng lượng mất mát": 22,
    "23. Chất thể mất mát": 23,
    "24. Thông tin mất mát": 24,
    "25. Thời gian mất mát": 25,
    "26. Lượng chất thể": 26,
    "27. Độ tin cậy": 27,
    "28. Độ chính xác trong đo lường": 28,
    "29. Độ chính xác trong chế tạo": 29,
    "30. Các nhân tố có hại từ bên ngoài tác động lên đối tượng": 30,
    "31. Các nhân tố có hại sinh ra bởi chính đối tượng": 31,
    "32. Tiện lợi trong chế tạo": 32,
    "33. Tiện lợi trong sử dụng, vận hành": 33,
    "34. Tiện lợi trong sửa chữa": 34,
    "35. Độ thích nghi, tính phổ dụng (vạn năng)": 35,
    "36. Độ phức tạp của thiết bị": 36,
    "37. Độ phức tạp trong kiểm tra và đo lường": 37,
    "38. Mức độ tự động hóa": 38,
    "39. Năng suất": 39
}

# Define creative principles mapping and replace <br> with a space
creative_principles = {
    1: "Nguyên tắc phân nhỏ (Segmentation)",
    2: "Nguyên tắc “tách khỏi” (Taking out)",
    3: "Nguyên tắc phẩm chất cục bộ (Local quality)",
    4: "Nguyên tắc phản đối xứng (Asymmetry)",
    5: "Nguyên tắc kết hợp (Merging)",
    6: "Nguyên tắc vạn năng (Universality)",
    7: "Nguyên tắc “chứa trong” (Nested Doll)",
    8: "Nguyên tắc phản trọng lượng (Anti-Weight)",
    9: "Nguyên tắc gây ứng suất sơ bộ (Preliminary Anti-Action)",
    10: "Nguyên tắc thực hiện sơ bộ (Preliminary Action)",
    11: "Nguyên tắc dự phòng (Beforehand Cushioning)",
    12: "Nguyên tắc đẳng thế (Equipotentiality)",
    13: "Nguyên tắc đảo ngược (The Other Way Round)",
    14: "Nguyên tắc cầu (tròn) hóa (Spheroidality - Curvature)",
    15: "Nguyên tắc linh động (Dynamics)",
    16: "Nguyên tắc giải “thiếu” hoặc “thừa” (Partial or Excessive Actions)",
    17: "Nguyên tắc chuyển sang chiều khác (Another Dimension)",
    18: "Nguyên tắc sử dụng các dao động cơ học (Mechanical vibration)",
    19: "Nguyên tắc tác động theo chu kỳ (Periodic Action)",
    20: "Nguyên tắc liên tục tác động có ích (Continuity of Useful Action)",
    21: "Nguyên tắc “vượt nhanh” (Skipping)",
    22: "Nguyên tắc biến hại thành lợi (\"Blessing in Disguise\" or \"Turn Lemons into Lemonade\")",
    23: "Nguyên tắc quan hệ phản hồi (Feedback)",
    24: "Nguyên tắc sử dụng trung gian (Intermediary)",
    25: "Nguyên tắc tự phục vụ (Self-service)",
    26: "Nguyên tắc sao chép (Copying)",
    27: "Nguyên tắc “rẻ” thay cho “đắt” (Cheap Short-Living Objects)",
    28: "Thay thế sơ đồ cơ học (Mechanics Substitution)",
    29: "Sử dụng các kết cấu khí và lỏng (Pneumatics and Hydraulics)",
    30: "Sử dụng vỏ dẻo và màng mỏng (Flexible Shells and Thin Films)",
    31: "Sử dụng các vật liệu nhiều lỗ (Porous Materials)",
    32: "Nguyên tắc thay đổi màu sắc (Color Changes)",
    33: "Nguyên tắc đồng nhất (Homogeneity)",
    34: "Nguyên tắc phân hủy hoặc tái sinh các phần (Discarding and Recovering)",
    35: "Thay đổi các thông số hóa lý của đối tượng (Parameter Changes)",
    36: "Sử dụng chuyển pha (Phase Transitions)",
    37: "Sử dụng sự nở nhiệt (Thermal Expansion)",
    38: "Sử dụng các chất oxy hóa mạnh (Strong Oxidants or Boosted Interactions)",
    39: "Thay đổi độ trơ (Inert Atmosphere)",
    40: "Sử dụng các vật liệu hợp thành (Composite Structures)"
}

# Define the UI components
app_ui = ui.page_fluid(
    ui.layout_sidebar(
        ui.panel_sidebar(
            ui.h3("Matrix 39"),
            ui.input_select(
                "row_select",
                "Tốt lên:",
                list(parameter_mapping.keys()),
                width="100%"
            ),
            ui.input_select(
                "col_select",
                "Xấu đi:",
                list(parameter_mapping.keys()),
                width="100%"
            ),
            ui.input_action_button("submitbutton", "Submit", class_="btn btn-primary", width="100%"),
        ),
        ui.panel_main(
            ui.h3("__________NGUYÊN TẮC SÁNG TẠO__________ "),
            ui.output_table("selected_table", class_="table table-sm table-striped"),
            ui.HTML("<style> .table { font-size: 15px; text-align: left; } </style>"),
        ),
        style="font-size: 15px; padding: 0px;"
    ),
    style="font-size: 15px; padding: 0px;"
)

def server(input: Inputs, output: Outputs, session: Session):
    @reactive.Calc
    def read_file():
        return pd.read_csv(file_path, delimiter=';')

    @reactive.Calc
    def selected_value_calc():
        df_matrix = read_file()
        if df_matrix.empty:
            return pd.DataFrame({"Error": ["The data file could not be loaded."]})
        
        if input.submitbutton() > 0:
            row_select = input.row_select()
            col_select = input.col_select()
            row_idx = parameter_mapping[row_select] - 1  # Adjust for 0-based indexing
            col_idx = parameter_mapping[col_select] - 1  # Adjust for 0-based indexing
            value = df_matrix.iloc[row_idx, col_idx]
            selected_values = [int(val) for val in str(value).split(',')]
            result = pd.DataFrame({
                "Principles": selected_values,
                " ": [creative_principles[val] for val in selected_values]
            })
            return result
        return pd.DataFrame(columns=["Principles", " "])

    @output
    @render.table
    def selected_table():
        return selected_value_calc()

app = App(app_ui, server)

```
